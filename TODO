jless:

Building Blocks:
+ Blocking input on SIGWINCH or STDIN input
  + Put terminal in raw mode
  + Create pipe for signal handler -> main thread
  + Register signal handler
    + Write to pipe in signal handler
  + Select syscall between stdin and pipe
  + Print out what happens
    + Handle special control character/sequences

JSON Input:
+ Read from file or STDIN
- Format JSON as single line
- Store slices with JSON nodes

Basic navigation and printing:
- Pretty print JSON
- Print whole blob everytime
- Arrow keys for navigation in fully-expanded JSON
- Support collapsing arrays/objects

Other features:
- Syntax highlighting

Paging:
- Print out more lines when scrolling down
- Reprint stuff when going back up


Operations:
- h/j/k/l/arrow keys: navigate tree / expand collapse nodes
- i: toggle inline view for arrays and objects
- /: text search forwards
- ?: text search backwards
- *: find next occurrence of key
- #: find prev occurrence of key
- 0: focus first element in array/object
- $: focus last element in array/object
- x: hide key (in all paths?)

// Not super sure about these
- e: expand (explode?) current node completely
- E: expand (explode?) self and all siblings
- c: collapse current node completely
- C: collapse self and siblings

// Are these relative to current selected node?
- 1: collapse everything at depth > 1
- 2: collapse everything at depth > 2 (and expand before)
- 3: collapse everything at depth > 3 (and expand before)
- ...

- </>: decrease/increase indent


- g: top of the file
- G: "bottom" of the file (last node)


